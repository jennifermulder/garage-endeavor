{"version":3,"sources":["assets/images/spinner.gif","assets/images/garage-sale-sign.gif","assets/images/shoppingcart-icon.png","utils/auth.js","pages/Home.js","utils/helpers.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","components/Cart/index.js","pages/Buy.js","components/SimilarProductList/index.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/SellItem.js","components/UserProductList/index.js","pages/UserProfile.js","pages/Redirect.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","StyledHomeBackground","styled","div","GarageDoorDiv","GarageSign","section","garageSign","Stylediv","Buttondiv","Button","Link","Home","React","useState","buttonClass","setButtonClass","garageClass","setGarageClass","makeButtonsZedIndexGoUp","className","href","to","onMouseEnter","Auth","loggedIn","onMouseLeave","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","onsuccess","transaction","objectStore","console","log","put","all","getAll","delete","_id","oncomplete","close","reducer","state","action","type","products","categories","currentCategory","cartOpen","cart","product","newState","filter","length","map","purchaseQuantity","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","StyledButton","button","WhiteBackground","ProductItem","item","image","name","price","quantity","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CATEGORIES","QUERY_USER","QUERY_CHECKOUT","ProductList","useQuery","loading","data","useEffect","forEach","then","category","key","reverse","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","aria-label","removeFromCart","CartDiv","IconDiv","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","a","getCart","res","redirectToCheckout","sessionId","checkout","session","shoppingIcon","sum","toFixed","calculateTotal","productIds","i","push","variables","BuyBackground","StyledDiv","Buy","SimilarProductList","currentProduct","filterProducts","similarProds","tag","spinner","FormatButton","Detail","useParams","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","ADD_PRODUCT","StyledLoginBackground","StyledForm","form","StyledInput","input","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","StyledSignupBackground","Signup","addUser","firstName","lastName","StyledHeader","header","Nav","logout","Success","addOrder","setTimeout","saveOrder","SellBackground","StyledSelect","select","StyledTextArea","textarea","StyledPhotoInput","Error","span","SellItem","addProduct","userID","getProfile","user","slice","isNaN","newProduct","document","getElementById","display","querySelector","files","hidden","for","min","UserProductList","UserBackground","UserProfile","orders","order","purchaseDate","toLocaleDateString","index","Redirect","cnt","setInterval","textContent","cntDown","url","indexOf","replace","listingName","StyledFooter","footer","StyledFlexDiv","StyledHrSH","hr","StyledHrJM","StyledHrSI","StyledP","StyledFlexItem","StyledCopyright","Footer","client","ApolloClient","operation","setContext","headers","authorization","uri","App","exact","path","component","navigator","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","fetch","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.68e5cf1c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","module.exports = __webpack_public_path__ + \"static/media/garage-sale-sign.ad9ceeea.gif\";","module.exports = __webpack_public_path__ + \"static/media/shoppingcart-icon.8758ca9c.png\";","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport garageSign from \"../assets/images/garage-sale-sign.gif\";\nimport { Link } from \"react-router-dom\";\nimport Auth from \"../utils/auth\";\n\nconst StyledHomeBackground = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-image: url('https://garageendeavor.s3.us-west-1.amazonaws.com/open-garage-door.png');\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  height: 100%;\n  background-size: 100vh 100%;\n  background-position: center;\n  background-repeat: repeat-x;\n  z-index: -1; \n  padding-top: 100vh;\n`;\n\nconst GarageDoorDiv = styled.div`\n  position: absolute;\n  background-image: url('https://garageendeavor.s3.us-west-1.amazonaws.com/garage-door.png');\n  background-size: 100% 100%;\n  height: 33vh;\n  width: 52vh;\n  background-repeat: no-repeat;\n  transition: background-position 1s ease;\n  margin: 0.5vh 0 0 2vh;\n  z-index: 3;\n  display: flex;\n  align-items: center;\n  margin-top: -61vh !important;\n`;\n\nconst GarageSign = styled.section`\n  position: absolute;\n  transform: rotate(60deg);\n  background-image: url(${garageSign});\n  background-size: 100% 100%;\n  height: 17vh;\n  width: 27vh;\n  background-repeat: no-repeat;\n  z-index: 2;\n  margin-top: -78vh !important;\n`;\n\nconst Stylediv = styled.div`\n  background-size: 100% 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Buttondiv = styled.section`\n  margin-top: -45vh;\n`;\n\nconst Button = styled(Link)`\n  height: 8vh;\n  width: 16vh;\n  position: relative;\n  font-size: 3vh;\n  margin: 3vh 4.5vh;\n  padding: 2vh 4vh;\n  border: 2px solid;\n  border-radius: 3px;\n  z-index: 1;\n  -webkit-transition: opacity 1.4s;\n  transition: opacity 1.4s;\n  opacity: 0;\n  color: black;\n  border-color: black;\n  background-color: cyan;\n  text-align: center;\n`;\n\nconst Home = () => {\n  const [buttonClass, setButtonClass] = React.useState(\"\");\n  const [garageClass, setGarageClass] = React.useState(\"\");\n\n  function makeButtonZedGoDown() {\n    setButtonClass(\"\");\n    setGarageClass(\"\");\n  }\n\n  function makeButtonsZedIndexGoUp() {\n    setButtonClass(\"make-button-visible\");\n    setGarageClass(\"make-garage-door-stay-up\");\n  }\n\n  return (\n    <div className=\"\">\n      <StyledHomeBackground className=\"garage media-cart-placement-adjustment\">\n        <Stylediv>\n          <GarageSign />\n          <Stylediv>\n            <Buttondiv href=\"#\">\n              <Button\n                to=\"/buy\"\n                className={buttonClass}\n                onMouseEnter={() => makeButtonsZedIndexGoUp()}\n              >\n                Buy\n              </Button>\n              {Auth.loggedIn() ? (\n                <Button\n                  to=\"/sell-item\"\n                  className={buttonClass}\n                  onMouseEnter={() => makeButtonsZedIndexGoUp()}\n                >\n                  Sell\n                </Button>\n              ) : (\n                <Button\n                  to=\"/login\"\n                  className={buttonClass}\n                  onMouseEnter={() => makeButtonsZedIndexGoUp()}\n                >\n                  Login\n                </Button>\n              )}\n            </Buttondiv>\n\n            <GarageDoorDiv\n              className={garageClass}\n              onMouseEnter={() => makeButtonsZedIndexGoUp()}\n              onMouseLeave={() => makeButtonZedGoDown()}\n            />\n          </Stylediv>\n        </Stylediv>\n      </StyledHomeBackground>\n    </div>\n  );\n};\n\nexport default Home;\n","export function pluralize(name, count) {\n  if (count === 1) {\n    return name\n  }\n  return name + 's'\n}\n\n//opens the db connection\n//creates the object store (1st time)/ connect (pass in storeName)\n//runs transaction needed\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    // open connection to the database `shop-shop` with the version of 1\n    const request = window.indexedDB.open('garageendeavor', 1);\n\n    // create variables to hold reference to the database, transaction (tx), and object store\n    let db, tx, store;\n\n    // if version has changed (or if this is the first time using the database), run this method and create the three object stores \n    request.onupgradeneeded = function (e) {\n      const db = request.result;\n      // create object store for each type of data and set \"primary\" key index to be the `_id` of the data\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    // handle any errors with connecting\n    request.onerror = function (e) {\n      //console.log('There was an error');\n    };\n\n    // on database open success\n    request.onsuccess = function (e) {\n      // save a reference of the database to the `db` variable\n      db = request.result;\n      // open a transaction do whatever we pass into `storeName` (must match one of the object store names)\n      tx = db.transaction(storeName, 'readwrite');\n      // save a reference to that object store\n      store = tx.objectStore(storeName);\n\n      // if there's any errors, let us know\n      db.onerror = function (e) {\n        //console.log('error', e);\n      };\n      \n      //check which value we passed into the function as a method and perform that method on the object store:\n      switch (method) {\n        case 'put':\n          console.log({object})\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function () {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          //console.log('No valid method');\n          break;\n      }\n\n      // when the transaction is complete, close the connection\n      tx.oncomplete = function () {\n        db.close();\n      };\n    };\n  });\n}\n","import {\n  UPDATE_PRODUCTS,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  ADD_TO_CART,\n  ADD_MULTIPLE_TO_CART,\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nimport { useReducer } from 'react';\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products]\n      };\n    // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories]\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        // immediately view the cart after adding a new item\n        cartOpen: true,\n        // ... spread operatot to preserve everything else on state\n        cart: [...state.cart, action.product]\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        //create new array instead of updating \n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity;\n          }\n          return product;\n        })\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    default:\n      return state;\n  }\n};\n//initialize global State object\nexport function useProductReducer(initialState) {\n  //use custom reducer(), function\n  return useReducer(reducer, initialState);\n}\n\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\n// select a category from the state created by the UPDATE_CATEGORIES action and display products from product list \nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const TOGGLE_CART = 'TOGGLE_CART';","//instantiate a new Context object - create container to hold global state. useContext = use state created from createContext\nimport React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers';\n\nconst StoreContext = createContext();\n//deconstruct the context created. Context = { Provider (wrap application to accept props), Consumer (grab and use data from Provider)}\nconst { Provider } = StoreContext;\n\n//\"custom\" Provider component\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    //instantiate initial global state\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n  // use this to confirm it works!\n  //console.log(state);\n  //return when useProductReducer is run. Need to return props or nothing will render\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\n// When executed from within a component, we will receive the [state, dispatch] provided by StoreProvider\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { idbPromise, pluralize } from \"../../utils/helpers\";\n\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\n\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  margin: 3px;\n  background-color: lightpink;\n  color: black; ;\n`;\n\nconst WhiteBackground = styled.div`\n  background-color: white;\n  border: 2px solid black;\n  border-radius: 10px;\n  color: black;\n  // height: initial;\n  align-items: center;\n  justify-content: center;\n  margin: 0 4% 3%;\n  padding: 2%;\n`;\n\nfunction ProductItem(item) {\n  const { image, name, _id, price, quantity } = item;\n\n  const [state, dispatch] = useStoreContext();\n  // destructure cart from state so that it can be used\n  const { cart } = state;\n\n  const addToCart = () => {\n    // find the cart item with the matching id\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n\n    // if there was a match, call UPDATE with a new purchase quantity\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise(\"cart\", \"put\", {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 },\n      });\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: 1 });\n    }\n  };\n\n  return (\n    <WhiteBackground className=\"card px-1 py-1 card-hover\">\n      <Link to={`/products/${_id}`}>\n        <p>{name}</p>\n        <img alt={name} src={`${image}`} />\n      </Link>\n      <div>\n        <span>${price}</span>\n        <div>\n          {quantity} {pluralize(\"item\", quantity)} in stock\n        </div>\n      </div>\n      <StyledButton className=\"button-hover\" onClick={addToCart}>\n        Add to cart\n      </StyledButton>\n    </WhiteBackground>\n  );\n}\n\nexport default ProductItem;\n","import gql from 'graphql-tag';\n\n// FIXME: breaks when trying to query field user _id\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      tag\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      tag\n      price\n      quantity\n      category {\n        name\n      }\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n{\n  categories {\n    _id\n    name\n  }\n}\n`;\n\nexport const QUERY_USER = gql`\n{\n  user {\n    firstName\n    lastName\n    orders {\n      _id\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        tag\n        price\n        quantity\n        image\n      }\n    }\n  }\n}\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;","import React, { useEffect } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport ProductItem from \"../ProductItem\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport styled from \"styled-components\";\n\nconst WhiteBackground = styled.div`\n  background-color: white;\n  border: 2px solid black;\n  border-radius: 10px;\n  color: black;\n  z-index: 2;\n  padding: 5px 5px 5px 10px;\n  margin-bottom: 18px;\n  width: 200px;\n`;\n\nfunction ProductList() {\n  //immediately execute to retrieve current global state object, dispatch to update state\n  const [state, dispatch] = useStoreContext();\n  //products are being retrieved from the state object\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n  //when product data from the useQuery() Hook's response to the global state object is saved with the dispatch() method, we also save each file to the products object store in IndexedDB using the idbPromise() function\n  useEffect(() => {\n    // if there's data to be stored\n    if (data) {\n      // let's store it in the global state object\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      // but let's also take each product and save it to IndexedDB using the helper function\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n      // add else if to check if `loading` is undefined in `useQuery()` Hook\n    } else if (!loading) {\n      // since we're offline, get all of the data from the `products` store\n      idbPromise(\"products\", \"get\").then((products) => {\n        // use retrieved data to set global state for offline browsing\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <WhiteBackground>\n        <h2>Great Finds:</h2>\n      </WhiteBackground>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n            {filterProducts().map(product => (\n                <ProductItem\n                  key= {product._id}\n                  _id={product._id}\n                  image={product.image}\n                  name={product.name}\n                  price={product.price}\n                  quantity={product.quantity}\n                />\n            )).reverse()}\n        </div>\n      ) : (\n        <h3>You haven't added anything for sale yet!</h3>\n      )}\n      {/* {loading ? <img src={spinner} alt=\"loading\" /> : null} */}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { idbPromise } from '../../utils/helpers';\n\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  margin: 3px;\n  background-color: lightpink;\n  color: black;\n;`\n\n\nfunction CategoryMenu() {\n  // const { data: categoryData } = useQuery(QUERY_CATEGORIES);\n  // const categories = categoryData?.categories || [];\n\n  // immediately call, retrieve current state from global state object, .dispatch() method to update state\n  const [state, dispatch] = useStoreContext();\n  //only need categories array out of global state, destructure to use in JSX\n  const { categories } = state;\n  //query category data and store into global state object\n  //destrcuture loading variable; indicates waiting\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n    //*** check if the useQuery() Hook's loading return value exists - pull from IndexedDB if not \n  useEffect(() => {\n    // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      //save to idb store\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    }\n    else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map(item => (\n        <StyledButton\n          className=\"button-hover\"\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </StyledButton>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n    \n      idbPromise('cart', 'delete', { ...item });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n    \n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n    }\n  };\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import React, { useEffect } from \"react\";\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport \"./style.css\";\nimport { useLazyQuery } from \"@apollo/react-hooks\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { QUERY_CHECKOUT } from \"../../utils/queries\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport styled from \"styled-components\";\nimport shoppingIcon from \"../../assets/images/shoppingcart-icon.png\";\n\nconst CartDiv = styled.div`\n  margin: 50px 0 0 0;\n`;\n\nconst IconDiv = styled.div`\n  position: fixed;\n  margin: 6vh 0.5vh 0 0;\n  background-color: transparent;\n  width: 12vh;\n  z-index: 11;\n`;\n\nconst StyledButton = styled.button`\n  margin: 3px;\n  background-color: lightpink;\n  color: black;\n;`\n\n//use to perform checkout redirect\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\nconst Cart = () => {\n  //use useStoreContext cutom Hook to establish a state variable and the dispatch function to update the state.\n  //dispatch will call the toggle cart action\n  const [state, dispatch] = useStoreContext();\n  // to be able to query on Click, data variable contains checkout session, only after the query is called with the getCheckout() function\n  //data holds returned data from useLazyQuery\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise(\"cart\", \"get\");\n      //return array of itmes from indexedDB\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n    //check if there is anything in the cart\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  //looks for change in data\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  //console.log(state)\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <CartDiv className=\"media-adjustment\">\n        <IconDiv className=\"cart-closed media-cart-adjustment\" onClick={toggleCart}>\n          <img src={shoppingIcon} />\n        </IconDiv>\n      </CartDiv>\n    );\n  }\n  //user clicks checkout, loops over the items saved in state.cart, adds Ids to new productIds array\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  //toggle on cartOpen value when [close] text is clicked\n  return (\n    <CartDiv className=\"cart media-cart-placement-adjustment\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n            {Auth.loggedIn() ? (\n              <StyledButton className=\"button-hover\" onClick={submitCheckout}>Checkout</StyledButton>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </CartDiv>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst BuyBackground = styled.div`\n  background-image: url('https://garageendeavor.s3.us-west-1.amazonaws.com/buy-background.jpg');\n  background-size: 400px;\n  display: flex;\n`;\n\nconst StyledDiv = styled.div`\n  padding-top: 90px;\n`;\n\nconst WhiteBackground = styled.div`\n  background-color: white;\n  border: 2px solid black;\n  border-radius: 10px;\n  color: black;\n  z-index: 2;\n  padding: 20px;\n  padding-top: 0;\n`;\n\nconst Buy = () => {\n  return (\n    <BuyBackground>\n      <StyledDiv className=\"container media-adjustment\">\n        <WhiteBackground>\n          <CategoryMenu />\n        </WhiteBackground>\n        <ProductList />\n        <Cart />\n      </StyledDiv>\n    </BuyBackground>\n  );\n};\n\nexport default Buy;","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport ProductItem from \"../ProductItem\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { idbPromise } from \"../../utils/helpers\";\nimport spinner from \"../../assets/images/spinner.gif\"\n\nfunction SimilarProductList({currentProduct}) {\n//immediately execute to retrieve current global state object, dispatch to update state  \nconst [state, dispatch] = useStoreContext();\n\nconst { loading, data } = useQuery(QUERY_PRODUCTS);\n//when product data from the useQuery() Hook's response to the global state object is saved with the dispatch() method, we also save each file to the products object store in IndexedDB using the idbPromise() function\nuseEffect(() => {\n  // if there's data to be stored\n  if (data) {\n    // let's store it in the global state object\n    dispatch({\n      type: UPDATE_PRODUCTS,\n      products: data.products\n    });\n\n    // but let's also take each product and save it to IndexedDB using the helper function \n    data.products.forEach((product) => {\n      idbPromise('products', 'put', product);\n    });\n    // add else if to check if `loading` is undefined in `useQuery()` Hook\n  } else if (!loading) {\n    // since we're offline, get all of the data from the `products` store\n    idbPromise('products', 'get').then((products) => {\n      // use retrieved data to set global state for offline browsing\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: products\n      });\n    });\n  }\n}, [data, loading, dispatch]);\n\nfunction filterProducts() {\n  const similarProds = state.products.filter(product => (product.tag === currentProduct.tag && product._id !== currentProduct._id));\n  if(similarProds.length !== 0) {\n    return similarProds;\n  }\n  return false;\n}\n\n  return (\n    <div className=\"my-2\">\n      {state.products.length ? (\n        <div className=\"flex-row\">\n            {filterProducts() ?\n            filterProducts().map(product => (\n                <ProductItem\n                  key= {product._id}\n                  _id={product._id}\n                  image={product.image}\n                  name={product.name}\n                  price={product.price}\n                  quantity={product.quantity}\n                />\n            ))\n            :\n            <span>No similar products found.</span>\n          }\n        </div>\n      ) : (\n        <h3>You haven't added anything for sale yet!</h3>\n      )}\n      { loading ? \n      <img src={spinner} alt=\"loading\" />: null}\n    </div>\n  );\n}\n\nexport default SimilarProductList;","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/react-hooks\";\n\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from \"../utils/actions\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from '../assets/images/spinner.gif'\nimport SimilarProductList from \"../components/SimilarProductList\";\nimport Cart from \"../components/Cart\";\nimport styled from \"styled-components\";\n\nconst BuyBackground = styled.div`\n  background-image: url('https://garageendeavor.s3.us-west-1.amazonaws.com/buy-background.jpg');\n  height: inherit;\n  background-size: 400px;\n  display: flex;\n  justify-content: center;\n`;\n\nconst WhiteBackground = styled.div`\n  background-color: white;\n  border: 2px solid black;\n  border-radius: 10px;\n  color: black;\n  z-index: 0;\n  width: 100%;\n  padding: 20px;\n  margin-top: 20px;\n  margin-bottom: 40px;\n  justify-content: center;\n`;\n\nconst FormatButton = styled.button`\n  background-color: lightpink;\n  color: black;\n`;\n\nconst StyledDiv = styled.div`\n  padding-top: 60px;\n`;\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n  // passing the _id value of product selected to the useQuery() Hook and displaying the response to the page.\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n  //update global state, update in Indexeddb\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      // if we're updating quantity, use existing item data and increment purchaseQuantity value by one\n      idbPromise(\"cart\", \"put\", {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      // if product isn't in the cart yet, add it to the current shopping cart in IndexedDB\n      idbPromise(\"cart\", \"put\", { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    // upon removal from cart, delete the item from IndexedDB using the `currentProduct._id` to locate what to remove\n    idbPromise(\"cart\", \"delete\", { ...currentProduct });\n  };\n\n  useEffect(() => {\n    //already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n      //data returned from useQuery Hook\n    } else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise(\"products\", \"get\").then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  return (\n    <BuyBackground>\n      <StyledDiv className=\"container media-adjustment\">\n        <WhiteBackground>\n          {currentProduct ? (\n            <div className=\"container my-1\">\n              <Link to=\"/buy\">← Back to Products</Link>\n\n              <h2>{currentProduct.name}</h2>\n\n              <p>{currentProduct.description}</p>\n\n              <p>\n                <strong>Price:</strong>${currentProduct.price}{\" \"}\n                <FormatButton className=\"button-hover\" onClick={addToCart}>\n                  Add to Cart\n                </FormatButton>\n                <FormatButton\n                  className=\"button-hover\"\n                  disabled={!cart.find((p) => p._id === currentProduct._id)}\n                  onClick={removeFromCart}\n                >\n                  Remove from Cart\n                </FormatButton>\n              </p>\n\n              <img src={currentProduct.image} alt={currentProduct.name} />\n\n              <h3>Similar Items:</h3>\n              <SimilarProductList currentProduct={currentProduct} />\n            </div>\n          ) : null}\n          {loading ? <img src={spinner} alt=\"loading\" /> : null}\n          <Cart />\n        </WhiteBackground>\n      </StyledDiv>\n    </BuyBackground>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        tag\n        price\n        quantity\n        category {\n          name\n        } \n      }\n    }\n  }\n`;\n\n\nexport const ADD_USER = gql`\n  mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\n    addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_PRODUCT = gql`\n  mutation addProduct($name: String!, $description: String, $tag: String, $image: Upload!, $price: Float!, $quantity: Int, $category: ID!, $user: ID!) {\n    addProduct(name: $name, description: $description, tag: $tag, image: $image, price: $price, quantity: $quantity, category: $category, user: $user) {\n        _id\n      name\n      description\n      tag\n      price\n      quantity\n      category {\n        name\n      } \n      user {\n        _id\n      }\n    }\n  }\n`;","import React, { useState } from \"react\";\nimport styled from \"styled-components\"\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst StyledLoginBackground = styled.div`\nbackground-image: url('https://garageendeavor.s3.us-west-1.amazonaws.com/login-background.jpg');\n  height: inherit;\n  background-size: 400px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst WhiteBackground = styled.div`\n  background-color: white;\n  border: 2px solid black;\n  border-radius: 10px;\n  color: black;\n  z-index: 0;\n  width: 40%;\n  padding: 20px;\n  margin: 260px 0 180px 0;\n`;\n\nconst StyledForm = styled.form`\n  width: 100%; ;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 5px 10px;\n  margin: 1px 0;\n  margin-bottom: 10px;\n  display: inline-block;\n  border: 1px solid;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\n\nconst StyledButton = styled.button`\n  margin: 3px;\n  background-color: lightpink;\n  color: black;\n`;\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      //console.log(e)\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <StyledLoginBackground>\n      <WhiteBackground className=\"adjustment\">\n        <Link to=\"/signup\">← Go to Signup</Link>\n        <h2>Login</h2>\n        <StyledForm onSubmit={handleFormSubmit}>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"email\">Email address:</label>\n            <StyledInput\n              placeholder=\"youremail@test.com\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"pwd\">Password:</label>\n            <StyledInput\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              onChange={handleChange}\n            />\n          </div>\n          {error ? (\n            <div>\n              <p className=\"error-text\">\n                The provided credentials are incorrect\n              </p>\n            </div>\n          ) : null}\n          <div className=\"flex-row flex-end\">\n            <StyledButton className=\"button-hover\" type=\"submit\">\n              Submit\n            </StyledButton>\n          </div>\n        </StyledForm>\n      </WhiteBackground>\n    </StyledLoginBackground>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\"\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nconst StyledSignupBackground = styled.div`\n  background-image: url('https://garageendeavor.s3.us-west-1.amazonaws.com/signup-background.jpg');\n  height: inherit;\n  background-size: 400px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst WhiteBackground = styled.div`\n  background-color: white;\n  border: 2px solid black;\n  border-radius: 10px;\n  color: black;\n  z-index: 0;\n  width: 40%;\n  padding: 20px;\n  margin: 162px 0 110px 0;\n`;\n\nconst StyledForm = styled.form`\n  width: 100%; ;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 5px 10px;\n  margin: 1px 0;\n  margin-bottom: 10px;\n  display: inline-block;\n  border: 1px solid;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\n\nconst StyledButton = styled.button`\n  margin: 3px;\n  background-color: lightpink;\n  color: black;\n`;\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <StyledSignupBackground>\n      <WhiteBackground className=\"adjustment\">\n        <Link to=\"/login\">← Go to Login</Link>\n        <h2>Signup</h2>\n        <StyledForm onSubmit={handleFormSubmit}>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"firstName\">First Name:</label>\n            <StyledInput\n              placeholder=\"First\"\n              name=\"firstName\"\n              type=\"firstName\"\n              id=\"firstName\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"lastName\">Last Name:</label>\n            <StyledInput\n              placeholder=\"Last\"\n              name=\"lastName\"\n              type=\"lastName\"\n              id=\"lastName\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"email\">Email:</label>\n            <StyledInput\n              placeholder=\"youremail@test.com\"\n              name=\"email\"\n              type=\"email\"\n              id=\"email\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"pwd\">Password:</label>\n            <StyledInput\n              placeholder=\"******\"\n              name=\"password\"\n              type=\"password\"\n              id=\"pwd\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row flex-end\">\n            <StyledButton className=\"button-hover\" type=\"submit\">\n              Submit\n            </StyledButton>\n          </div>\n        </StyledForm>\n      </WhiteBackground>\n    </StyledSignupBackground>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledHeader = styled.header`\n  z-index: 10;\n  `\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row changing-size-profile-logout\">\n          <li className=\"mx-1\">\n            <Link to=\"/user\">\n              User Profile\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row changing-size-signup-login\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <StyledHeader className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\"></span>\n          Garage Collage\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </StyledHeader>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Jumbotron from \"../components/Jumbotron\";\nimport { ADD_ORDER } from \"../utils/mutations\"\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Success() {\n\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      //get all cart items\n      const cart = await idbPromise('cart', 'get');\n      //products maps the cart items into an array of product IDs\n      const products = cart.map(item => item._id);\n      //pass product IDs to the addOrder() mutation\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n      \n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(function(){ window.location.assign(\"/\") }, 3000);\n\n    }\n    //need to read from IndexedDB, call addOrder mutation \n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>\n          Thank you for your purchase!\n        </h2>\n        <h2>\n          You will now be redirected to the homepage\n        </h2>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default Success;","import React, { useState, useEffect } from \"react\";\nimport { QUERY_PRODUCTS, QUERY_CATEGORIES } from \"../utils/queries\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { idbPromise } from \"../utils/helpers\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport {\n  UPDATE_PRODUCTS,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from \"../utils/actions\";\nimport { ADD_PRODUCT } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport styled from \"styled-components\";\n\nconst SellBackground = styled.div`\n  background-image: url('https://garageendeavor.s3.us-west-1.amazonaws.com/sell-background.jpg');\n  height: inherit;\n  background-size: 400px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst WhiteBackground = styled.div`\n  background-color: white;\n  border: 2px solid black;\n  border-radius: 10px;\n  color: black;\n  z-index: 0;\n  width: 60%;\n  padding: 20px;\n  justify-content: center;\n  align-items: center;\n  margin: 70px 0 20px 0;\n`;\n\nconst StyledForm = styled.form`\n  width: 100%;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  padding: 5px 10px;\n  margin: 1px 0;\n  margin-bottom: 10px;\n  display: inline-block;\n  border: 1px solid;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\n\nconst StyledSelect = styled.select`\n  width: 100%;\n  padding: 5px 5px;\n  margin: 1px 0;\n  margin-bottom: 10px;\n  display: inline-block;\n  border: 1px solid;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\n\nconst StyledTextArea = styled.textarea`\n  width: 100%;\n  padding: 10px 10px;\n  margin: 1px 0;\n  margin-bottom: 10px;\n  display: inline-block;\n  border: 1px solid;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\n\nconst StyledPhotoInput = styled.input`\n  width: 100%;\n  padding: 5px 10px;\n  margin: 1px 0;\n  margin-bottom: 20px;\n  display: inline-block;\n  border: 1px solid;\n  border-radius: 4px;\n  box-sizing: border-box;\n`;\n\nconst Error = styled.span`\n  display: none;\n  color: red;\n`;\n\nconst StyledButton = styled.button`\n  margin: 3px;\n  background-color: lightpink;\n  color: black;\n`;\n\nconst SellItem = () => {\n  const [state, dispatch] = useStoreContext();\n  const { data: categoryData } = useQuery(QUERY_CATEGORIES);\n  const [addProduct, { error }] = useMutation(ADD_PRODUCT);\n  const { data, loading } = useQuery(QUERY_PRODUCTS);\n\n  let userID = \"\";\n  if (Auth.loggedIn()) {\n    userID = Auth.getProfile().data._id;\n  }\n\n  const [formState, setFormState] = useState({\n    name: \"\",\n    category: \"\",\n    quantity: \"\",\n    price: \"\",\n    description: \"\",\n    tag: \"\",\n    image: \"\",\n    user: userID,\n  });\n  let { categories } = state;\n  categories = categories.slice(0, 5);\n\n  useEffect(() => {\n    // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      //save to idb store\n      categoryData.categories.forEach((category) => {\n        idbPromise(\"categories\", \"put\", category);\n      });\n    } else if (!loading) {\n      idbPromise(\"categories\", \"get\").then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (\n      formState.name &&\n      !isNaN(parseInt(formState.price)) &&\n      formState.category &&\n      formState.user &&\n      formState.image\n    ) {\n      if (data) {\n        const newProduct = await addProduct({\n          variables: {\n            name: formState.name,\n            description: formState.description,\n            tag: formState.tag,\n            quantity: parseInt(formState.quantity),\n            image: formState.image,\n            price: parseInt(formState.price),\n            category: formState.category,\n            user: formState.user,\n          },\n        });\n\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: [...data.products, newProduct],\n        });\n\n        idbPromise(\"products\", \"put\", newProduct.data.addProduct);\n\n        if (newProduct.data.addProduct.name) {\n          window.location.assign(\n            `/redirect?${newProduct.data.addProduct.name}`\n          );\n        }\n      } else if (!loading) {\n        idbPromise(\"products\", \"get\").then((products) => {\n          dispatch({\n            type: UPDATE_PRODUCTS,\n            products: products,\n          });\n        });\n      }\n    } else {\n      document.getElementById(\"error-msg\").style.display = \"block\";\n    }\n  };\n\n  const handleChange = (event) => {\n    let { name, value } = event.target;\n    if (name === \"image\") {\n      value = document.querySelector(\"#image\").files[0];\n    }\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <SellBackground>\n      {Auth.loggedIn() ? (\n        <WhiteBackground className=\"sell-adjustment\">\n          <h1>Add a Listing</h1>\n          <span>*Required Field</span>\n          <StyledForm onSubmit={handleFormSubmit}>\n            <label>Listing Title*</label>\n            <StyledInput\n              name=\"name\"\n              placeholder=\"Add a title\"\n              onChange={handleChange}\n            />\n            <label>Category*</label>\n            <StyledSelect\n              name=\"category\"\n              placeholder=\"Add a category\"\n              onChange={handleChange}\n            >\n              <option value=\"\" hidden>\n                Choose a category...\n              </option>\n              {categories.map((category) => (\n                <option value={category._id}>{category.name}</option>\n              ))}\n            </StyledSelect>\n            <label>Price*</label>\n            <StyledInput\n              name=\"price\"\n              placeholder=\"Add a price\"\n              onChange={handleChange}\n            />\n            <label for=\"quantity\">Quantity:</label>\n            <StyledInput\n              type=\"number\"\n              name=\"quantity\"\n              placeholder=\"1\"\n              min=\"1\"\n              onChange={handleChange}\n            />\n            <label>Item Description</label>\n            <StyledTextArea\n              name=\"description\"\n              placeholder=\"Add a description\"\n              onChange={handleChange}\n            />\n            <label>Item Tag*</label>\n            <StyledTextArea\n              name=\"tag\"\n              placeholder=\"Add a tag\"\n              onChange={handleChange}\n            />\n            <label>Upload an Image*</label>\n            <StyledPhotoInput\n              name=\"image\"\n              id=\"image\"\n              type=\"file\"\n              onChange={handleChange}\n            />\n            <Error id=\"error-msg\">\n              *Either a required field is missing or information has been\n              inputted incorrectly. Please review your information.\n            </Error>\n            <div className=\"flex-row flex-end\">\n              <StyledButton className=\"button-hover\" type=\"submit\">\n                Add Listing\n              </StyledButton>\n            </div>\n          </StyledForm>\n        </WhiteBackground>\n      ) : (\n        <WhiteBackground>\n          <div>\n            <h2>You must be logged in to add a listing.</h2>\n            <a href=\"login\">Login</a>\n          </div>\n        </WhiteBackground>\n      )}\n    </SellBackground>\n  );\n};\n\nexport default SellItem;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\n\nimport ProductItem from \"../ProductItem\";\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { idbPromise } from \"../../utils/helpers\";\nimport Auth from '../../utils/auth';\nimport spinner from \"../../assets/images/spinner.gif\"\n\nfunction UserProductList() {\n// //immediately execute to retrieve current global state object, dispatch to update state  \nconst [state, dispatch] = useStoreContext();\nconst {products} = state;\n// //products are being retrieved from the state object\n// const { currentCategory } = state;\n\nconst { loading, data } = useQuery(QUERY_PRODUCTS);\n//when product data from the useQuery() Hook's response to the global state object is saved with the dispatch() method, we also save each file to the products object store in IndexedDB using the idbPromise() function\nuseEffect(() => {\n  // if there's data to be stored\n  if (data) {\n    // let's store it in the global state object\n    dispatch({\n      type: UPDATE_PRODUCTS,\n      products: data.products\n    });\n\n    // but let's also take each product and save it to IndexedDB using the helper function \n    data.products.forEach((product) => {\n      idbPromise('products', 'put', product);\n    });\n    // add else if to check if `loading` is undefined in `useQuery()` Hook\n  } else if (!loading) {\n    // since we're offline, get all of the data from the `products` store\n    idbPromise('products', 'get').then((products) => {\n      // use retrieved data to set global state for offline browsing\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: products\n      });\n    });\n  }\n}, [data, loading, dispatch]);\n\nfunction filterProducts(products) {\n  console.log({products})\n  if (!products) {\n    return products;\n  }\n\n  return products.filter(product => product.user._id === Auth.getProfile().data._id);\n}\n\n  return (\n    <div className=\"my-2\">\n      {products.length ? (\n        <div className=\"flex-row\">\n            {filterProducts(products).map(product => (\n                <ProductItem\n                  key= {product._id}\n                  _id={product._id}\n                  image={product.image}\n                  name={product.name}\n                  price={product.price}\n                  quantity={product.quantity}\n                />\n            ))}\n        </div>\n      ) : (\n        <h3>You haven't added anything for sale yet!</h3>\n      )}\n      { loading ? \n      <img src={spinner} alt=\"loading\" />: null}\n    </div>\n  );\n}\n\nexport default UserProductList;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport UserProductList from \"../components/UserProductList\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { QUERY_USER } from \"../utils/queries\";\nimport ProductItem from \"../components/ProductItem\";\n\nconst UserBackground = styled.div`\n  background-image: url('https://garageendeavor.s3.us-west-1.amazonaws.com/user-background.jpg');\n  height: inherit;\n  background-size: 800px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst WhiteBackground = styled.div`\n  background-color: white;\n  border: 2px solid black;\n  border-radius: 10px;\n  color: black;\n  z-index: 0;\n  width: 80%;\n  padding: 20px;\n  margin: 90px 0 50px 0;\n`;\n\nfunction UserProfile() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <UserBackground>\n      <WhiteBackground className=\"adjustment\">\n        <Link to=\"/buy\">← Back to Items</Link>\n        {user ? (\n          <>\n            <h1>\n              {user.firstName} {user.lastName}\n            </h1>\n            <br />\n            <h2>Posted Products</h2>\n            <UserProductList />\n            <br />\n            <h2>Order History</h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price, quantity }, index) => (\n                    <ProductItem\n                      key= {_id}\n                      _id={_id}\n                      image={image}\n                      name={name}\n                      price={price}\n                      quantity={quantity}\n                    />\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </WhiteBackground>\n    </UserBackground>\n  );\n}\n\nexport default UserProfile;","import React from 'react';\n\nfunction Redirect() {\n    const listingName = () => {\n        let url = window.location.href;\n        url = url.slice(url.indexOf('?') + 1).replace(/%20/g, ' ');\n        return url;\n    };\n\n    function cntDown (cnt) {\n        if(cnt !== 0) {\n            return setInterval(function () {\n                document.getElementById('cnt').textContent = `${cnt} seconds...`;\n                cnt -= 1;\n                if(cnt === 0) {\n                    window.location.href = '/buy';\n                }\n\n            }, 1000);\n        }\n    }\n\n    cntDown(10);\n    return (\n        <div>\n            <h1>Your Listing ({listingName()}) was successfully added!</h1>\n            <h3>The page will automatically redirect to browse products in <span id='cnt'></span></h3>\n            <a href='/sell-item'>\n                <h2><span><img src=\"https://img.icons8.com/ultraviolet/40/000000/circled-left-2.png\"/></span>Add another listing</h2>\n            </a>\n        </div>\n    )\n};\n\nexport default Redirect;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledFooter = styled.footer`\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledFlexDiv = styled.div`\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n  flex-direction: row;\n  align-content: space-around;\n  text-align: center;\n`;\n\nconst StyledHrSH = styled.hr`\n  width: 70px;\n`;\n\nconst StyledHrJM = styled.hr`\n  width: 135px;\n`;\n\nconst StyledHrSI = styled.hr`\n  width: 100px;\n`;\n\nconst StyledP = styled.p`\n  font-weight: bold;\n  font-variant: small-caps;\n  margin: 10px 0 5px 0;\n`;\n\nconst StyledFlexItem = styled.div`\n  width: 25%;\n`;\n\nconst StyledCopyright = styled.div`\n  text-align: right;\n  font-size: 3em !important;\n`;\n\nfunction Footer() {\n  return (\n    <StyledFooter className=\"site-footer\">\n        <StyledFlexDiv className=\"container footer-media-adj\">\n          <StyledFlexItem className=\"footer-flex-adj\">\n            <h6>About</h6>\n              <hr/>\n            <p className=\"text-center\">\n              Here at Garage Collage, we are trying to help the lives of people\n              in the COVID-19 pandemic by allowing them to safely and\n              effectively host a garage sale over our platform. Whether you're\n              trying to make money off of bulk things that you may not need, or\n              you're looking to purchase some things at a possibly lower retail\n              price or find something antique, Garage Collage is the place for\n              you!\n            </p>\n          </StyledFlexItem>\n\n          <StyledFlexItem className=\"footer-flex-adj\">\n            <h6>Who We Are</h6>\n              <hr/>\n            <ul className=\"footer-links\">\n              <StyledP>Sara Hu</StyledP>\n              <StyledHrSH/>\n              <li><a href=\"https://www.linkedin.com/in/sara-hu-12394311b/\">Linkedin</a></li>\n              <li><a href=\"https://github.com/shhu21\">Github</a></li>\n\n              <StyledP>Jennifer Mulder</StyledP>\n              <StyledHrJM/>\n              <li><a href=\"https://www.linkedin.com/in/jennifer-mulder-cpa-2125b571/\">Linkedin</a></li>\n              <li><a href=\"https://github.com/jennifermulder\">Github</a></li>\n\n              <StyledP>Scot Itakura</StyledP>\n              <StyledHrSI/>\n              <li><a href=\"https://www.linkedin.com/in/scot-itakura-289376157/\">Linkedin</a></li>\n              <li><a href=\"https://github.com/scotitakura\">Github</a></li>\n            </ul>\n          </StyledFlexItem>\n\n          <StyledFlexItem className=\"footer-flex-adj\">\n            <h6>Quick Links</h6>\n              <hr/>\n            <ul className=\"footer-links\">\n              <li><a href=\"#\">About Us</a></li>\n              <li><a href=\"#\">Contact Us</a></li>\n              <li><a href=\"#\">Contribute</a></li>\n              <li><a href=\"#\">Privacy Policy</a></li>\n              <li><a href=\"#\">Sitemap</a></li>\n            </ul>\n          </StyledFlexItem>\n        </StyledFlexDiv>\n      <StyledCopyright>\n        <p className=\"container\">\n          Copyright &copy; 2020 All Rights (Not Yet) Reserved\n        </p>\n      </StyledCopyright>\n    </StyledFooter>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost-upload';\n\nimport Home from \"./pages/Home\";\nimport Buy from \"./pages/Buy\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\nimport Success from \"./pages/Success\";\nimport SellItem from \"./pages/SellItem\";\nimport { StoreProvider } from \"./utils/GlobalState\";\nimport UserProfile from \"./pages/UserProfile\";\nimport Redirect from './pages/Redirect';\nimport Footer from './components/Footer';\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem('id_token')\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    })\n  },\n  uri: '/graphql',\n})\n\n\n\n//store provider from globalstate.js\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/buy\" component={Buy} />\n              <Route exact path=\"/user\" component={UserProfile} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/redirect\" component={Redirect} />\n              <Route exact path=\"/sell-item\" component={SellItem} />\n              <Route component={NoMatch} />\n            </Switch>\n            <Footer />\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nconsole.log(navigator, \"navigator\")\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // console.log(\n          //   'This web app is being served cache-first by a service ' +\n          //   'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          // );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  console.log(\"service worker line 62\")\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              //console.log(\n              //   'New content is available and will be used when all ' +\n              //   'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              // );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              //console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  console.log(\"service worker line 106\")\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      //console.log(\n      //   'No internet connection found. App is running in offline mode.'\n      // );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}